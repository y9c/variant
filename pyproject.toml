[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "variant"
version = "0.0.95"
description = "annotate variant"
authors = [{ name = "Chang Ye", email = "yech1990@gmail.com" }]
requires-python = ">=3.11"
license = "MIT"
readme = "README.md"

keywords = ["bioinformatics", "variant", "mutation", "RNA modification"]
dependencies = [
  "rich-click>=1.8.2",
  "xopen>=2.0.2",
  "pysam==0.23.1",
  "pyensembl>=2.2.4",
  "biopython>=1.85",
  "pyarrow>=19.0",
  "varcode",
]

[project.urls]
Repository = "https://github.com/yech1990/variant"

[project.scripts]
variant-effect = "variant.cli:effect"
variant = "variant.cli:cli"

[dependency-groups]
dev = [
    "cibuildwheel>=2.23.3",
    "pytest~=5.2",
]

[tool.setuptools]
# Configure C extension modules
# Note: ext-modules in pyproject.toml is still experimental but recommended
# See: https://setuptools.pypa.io/en/latest/userguide/ext_modules.html
ext-modules = [
  {name = "variant.seqpy", sources = ["variant/seqpy.c"]}
]

[tool.setuptools.packages.find]
where = ["."]
include = ["variant*"]

# Ensure C extensions are included in the wheel
[tool.setuptools.package-data]
"*" = ["*.c"]

# Configure cibuildwheel
[tool.cibuildwheel]
# Use uv as build frontend for faster builds
build-frontend = "build[uv]"
# Build for Python 3.11-3.13 only
build = "cp311-* cp312-* cp313-*"
# Skip Windows, 32-bit builds and PyPy
skip = "*-win* *-win32 *-manylinux_i686 *-musllinux_i686 pp*"

# Force binary wheels for ALL packages - applies to both build and test phases
environment = { PIP_ONLY_BINARY = ":all:", PIP_NO_BUILD_ISOLATION = "false", PIP_PREFER_BINARY = "1" }

# Additional test dependencies that should use binary wheels only
test-requires = ["pytest"]

[tool.cibuildwheel.linux]
# Use manylinux_2_28 to match available pysam wheels
manylinux-x86_64-image = "manylinux_2_28"
manylinux-aarch64-image = "manylinux_2_28"
# Install system dependencies as fallback (but shouldn't be needed with binary-only)
before-all = "yum install -y bzip2-devel zlib-devel xz-devel || apt-get update && apt-get install -y libbz2-dev zlib1g-dev liblzma-dev || true"
# Environment variables specifically for the test environment
environment = { PIP_ONLY_BINARY = ":all:", PIP_NO_BUILD_ISOLATION = "false", PIP_PREFER_BINARY = "1" }
# Simple test
test-command = "python -c 'import variant.seqpy; print(\"C extension test:\", variant.seqpy.revcomp(\"ATCG\"))'"

[tool.cibuildwheel.macos]
# Ensure we use binary wheels on macOS too
environment = { PIP_ONLY_BINARY = ":all:", MACOSX_DEPLOYMENT_TARGET = "10.15", PIP_PREFER_BINARY = "1" }
# Force binary wheels during test phase on macOS
test-command = "pip config set global.only-binary ':all:' && python -c 'import variant.seqpy; print(\"C extension test:\", variant.seqpy.revcomp(\"ATCG\"))'"
